{"version":3,"sources":["components/topNav.js","pages/index.js","pages/about.js","pages/three.js","pages/landing.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","color","list","width","fullList","TopNav","PageName","classes","React","useState","open","setOpen","className","id","IconButton","edge","aria-label","onClick","style","fontSize","Typography","variant","Drawer","onClose","anchor","role","List","map","text","index","ListItem","button","key","component","Link","to","ListItemIcon","ListItemText","primary","Main","About","document","addEventListener","e","MyRotatingBox","props","myMesh","useRef","setHover","useFrame","clock","a","getElapsedTime","current","rotation","x","y","z","position","Math","sin","delay","cos","hidden","setVisible","texture","THREE","load","scale","ref","onPointerOver","onPointerOut","Html","transition","opacity","transform","distanceFactor","occlude","onOcclude","RotatingStill","Three","intensity","OrbitControls","Landing","App","basename","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9ab3ba20.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    color: \"white\",\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: \"auto\",\n  },\n}));\n\nexport default function TopNav({ PageName }) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n\n  function handleDrawerOpen() {\n    setOpen(true);\n  }\n\n  const list = (anchor) => (\n    <div className={classes.list} role=\"presentation\">\n      <List>\n        {[\"Home\", \"About\", \"THREE\", \"Landing\"].map((text, index) => (\n          <ListItem button key={text} component={Link} to={text}>\n            <ListItemIcon>\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n            </ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n  return (\n\n    <div className={classes.root}>\n      {/* <div className=\"menu\"> */}\n      <div id=\"menuButton\">\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"menu\"\n          onClick={handleDrawerOpen}\n        >\n\n          <MenuIcon style={\n            {\n              color: \"white\",\n              fontSize: 40\n            }\n          } />\n        </IconButton>\n\n        <Typography variant=\"h6\" className={classes.title}>\n          {PageName}\n        </Typography>\n      </div>\n\n\n\n\n\n      {/* </div> */}\n      <Drawer open={open} onClose={() => setOpen(false)} anchor=\"left\">\n        {list()}\n      </Drawer>\n    </div>\n  );\n}\n","import React from \"react\";\nimport TopNav from \"../components/topNav\";\n\nconst Main = () => {\n  return (\n    <div>\n      <TopNav PageName={\"Home\"} />\n      <h1>mainpage</h1>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\nimport TopNav from \"../components/topNav\";\n\nconst About = () => {\n  return (\n    <div>\n      <TopNav PageName={\"AboutPage\"} />\n      <h1>About page</h1>\n      <body>aYOOOOOOOOOOOOOOOOOOOOOO</body>\n    </div>\n  );\n};\n\nexport default About;\n","import React, { useState } from 'react'\nimport TopNav from \"../components/topNav\";\nimport * as THREE from \"three\";\nimport { Canvas, useFrame } from \"@react-three/fiber\";\nimport { OrbitControls, Html } from '@react-three/drei'\nimport \"../css/three.css\"\n\ndocument.addEventListener('mousemove', onMouseUpdate, false);\n\nvar x = null;\nvar y = null;\n\nfunction onMouseUpdate(e) {\n  // x = (e.pageX / window.innerWidth) - 0.5;\n  // y = (e.pageY / window.innerHeight) - 0.5;\n\n  // console.log(x, y)\n}\n\nfunction MyRotatingBox(props) {\n  const myMesh = React.useRef();\n  const [hovered, setHover] = useState(false)\n\n\n\n  useFrame(({ clock }) => {\n    const a = clock.getElapsedTime();\n    // const b = 5\n\n    myMesh.current.rotation.x = a;\n    myMesh.current.rotation.y = a;\n    myMesh.current.rotation.z = a;\n\n    // myMesh.current.scale.x = 0.5 * Math.sin((clock.getElapsedTime() + props.delay) * b);\n    // myMesh.current.scale.y = 0.5 * Math.cos((clock.getElapsedTime() + props.delay) * b);\n    // myMesh.current.scale.z = 0.5 * Math.cos((clock.getElapsedTime() + props.delay) * b);\n\n    myMesh.current.position.x = (2 * Math.sin(clock.getElapsedTime() + props.delay)) + (x * 3);\n    myMesh.current.position.y = (2 * Math.cos(clock.getElapsedTime() + props.delay)) - (y * 3);\n    // console.log(props.delay)\n    // myMesh.current.position.set(myMesh.current.position.x-0.01,myMesh.current.position.y-0.01,0);\n  });\n\n  const [hidden, setVisible] = useState(false)\n  const texture = new THREE.TextureLoader().load(\"https://media-exp1.licdn.com/dms/image/C5603AQHZrMLlNEujLw/profile-displayphoto-shrink_200_200/0/1614307873790?e=1632960000&v=beta&t=9asZCAS91_OC4HxaOppbr0rLStkkUKSu-1bY_lpdtgE\");\n\n  return (\n    <mesh\n      scale={1}\n      ref={myMesh}\n      onPointerOver={(e) => setHover(true)}\n      onPointerOut={(e) => setHover(false)}>\n      <boxBufferGeometry />\n      <meshPhongMaterial map={texture} />\n      <Html\n        style={{\n          transition: 'all 0.2s',\n          opacity: hidden ? 0 : 1,\n          transform: `scale(${hidden ? 0.5 : 1})`\n        }}\n        distanceFactor={1.5}\n        position={[0, 0, 0.51]}\n        transform\n        occlude\n        onOcclude={setVisible}>\n        <h1 id='myName'>Shiyao Wang</h1>\n      </Html>\n\n    </mesh>\n  );\n}\n\nfunction RotatingStill(props) {\n  // const myMesh = React.useRef();\n  const myMesh = React.useRef();\n  const [hovered, setHover] = useState(false)\n\n\n  useFrame(({ clock }) => {\n    const a = clock.getElapsedTime();\n    // const b = 5\n\n    myMesh.current.rotation.x = a;\n    myMesh.current.rotation.y = a;\n    myMesh.current.rotation.z = a;\n\n\n    // myMesh.current.scale.x = 0.5 * Math.sin((clock.getElapsedTime() + props.delay) * b);\n    // myMesh.current.scale.y = 0.5 * Math.cos((clock.getElapsedTime() + props.delay) * b);\n    // myMesh.current.scale.z = 0.5 * Math.cos((clock.getElapsedTime() + props.delay) * b);\n    // console.log(props.delay)\n    // myMesh.current.position.set(myMesh.current.position.x-0.01,myMesh.current.position.y-0.01,0);\n  });\n\n  // const [size, set] = useState(0.5)\n  const [hidden, setVisible] = useState(false)\n  const texture = new THREE.TextureLoader().load(\"https://media-exp1.licdn.com/dms/image/C5603AQHZrMLlNEujLw/profile-displayphoto-shrink_200_200/0/1614307873790?e=1632960000&v=beta&t=9asZCAS91_OC4HxaOppbr0rLStkkUKSu-1bY_lpdtgE\");\n  // const colorMap = useLoader(TextureLoader, \"/home/shiyao-wang/Documents/websites/anivision/anivision/src/pages/test.jpg\")\n\n  return (\n    <mesh\n      scale={1}\n      ref={myMesh}\n      onPointerOver={(e) => setHover(true)}\n      onPointerOut={(e) => setHover(false)}>\n      <sphereBufferGeometry />\n      <meshPhongMaterial map={texture} />\n      <Html\n        style={{\n          transition: 'all 0.2s',\n          opacity: hidden ? 0 : 1,\n          transform: `scale(${hidden ? 0.5 : 1})`\n        }}\n        distanceFactor={1.5}\n        position={[0, 0, 0.51]}\n        transform\n        occlude\n        onOcclude={setVisible}>\n        <h1 id=\"myName\">Shiyao Wang</h1>\n      </Html>\n\n    </mesh>\n  );\n}\n\nconst Three = () => {\n  return (\n    <div id=\"THREE_page_body\">\n      {/* <img src=\"https://media-exp1.licdn.com/dms/image/C5603AQHZrMLlNEujLw/profile-displayphoto-shrink_200_200/0/1614307873790?e=1632960000&v=beta&t=9asZCAS91_OC4HxaOppbr0rLStkkUKSu-1bY_lpdtgE\" /> */}\n      <TopNav PageName={\"three.js testing\"} />\n      <Canvas id=\"c\">\n        <pointLight position={[10, 10, 5]} />\n        <pointLight position={[-10, -10, -10]} />\n        <MyRotatingBox delay={0} />\n        <MyRotatingBox delay={1} />\n        <MyRotatingBox delay={2} />\n        <MyRotatingBox delay={3} />\n        <MyRotatingBox delay={4} />\n        <MyRotatingBox delay={5} />\n        <RotatingStill />\n        <ambientLight intensity={0.1} />\n        <directionalLight />\n        <OrbitControls />\n      </Canvas>\n\n    </div>\n  );\n};\n\nexport default Three;\n","import React from 'react'\nimport TopNav from \"../components/topNav\";\nimport \"../css/landing.css\"\n\nconst Landing = () => {\n    return (\n        <div className=\"landingPage\">\n            <TopNav PageName={\"Landing\"} />\n            <div className=\"titleContainer\">\n                <p id=\"title\">(0-0)</p>\n            </div>\n\n        </div>\n    );\n};\n\nexport default Landing;\n","import React from \"react\";\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  HashRouter\n} from \"react-router-dom\";\n\nimport Main from \"./pages/index\";\nimport About from \"./pages/about\";\nimport Three from \"./pages/three\";\nimport Landing from \"./pages/landing\"\n\nfunction App() {\n  return (\n    <HashRouter basename='/'>\n      <div>\n        <Route exact path=\"/\" component={Main} />\n        <Route exact path=\"/home\" component={Main} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/three\" component={Three} />\n        <Route path=\"/landing\" component={Landing} />\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Canvas } from \"react-three-fiber\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}